"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/admin",{

/***/ "(pages-dir-browser)/./utils/api.js":
/*!**********************!*\
  !*** ./utils/api.js ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addStep: () => (/* binding */ addStep),\n/* harmony export */   calculateCompletionStats: () => (/* binding */ calculateCompletionStats),\n/* harmony export */   completeStep: () => (/* binding */ completeStep),\n/* harmony export */   deleteStep: () => (/* binding */ deleteStep),\n/* harmony export */   fetchSteps: () => (/* binding */ fetchSteps),\n/* harmony export */   getStepsForUser: () => (/* binding */ getStepsForUser),\n/* harmony export */   getUserCompletionStats: () => (/* binding */ getUserCompletionStats),\n/* harmony export */   updateStep: () => (/* binding */ updateStep)\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// Base URL from env or fallback to localhost\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || 'https://new-hire-onboarding.onrender.com';\nconst API_URL = 'https://new-hire-onboarding.onrender.com/steps';\n// ✅ Get all steps\nconst fetchSteps = async ()=>{\n    const res = await fetch(API_URL);\n    if (!res.ok) throw new Error('Failed to fetch steps');\n    return res.json();\n};\n// ✅ Get steps for a specific user\nconst getStepsForUser = async (username)=>{\n    const res = await fetch(\"\".concat(API_URL, \"?assignedTo=\").concat(encodeURIComponent(username)));\n    if (!res.ok) throw new Error('Failed to fetch steps for user');\n    return res.json();\n};\n// ✅ Add a new step\nconst addStep = async (step)=>{\n    const res = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(step)\n    });\n    if (!res.ok) throw new Error('Failed to add step');\n    return res.json();\n};\n// ✅ Update a step\nconst updateStep = async (id, updates)=>{\n    const res = await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n    });\n    if (!res.ok) throw new Error('Failed to update step');\n    return res.json();\n};\n// ✅ Delete a step\nconst deleteStep = async (id)=>{\n    const res = await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n        method: 'DELETE'\n    });\n    if (!res.ok) throw new Error('Failed to delete step');\n    return res.json();\n};\n// ✅ Mark step as completed\nconst completeStep = async (id)=>{\n    const res = await fetch(\"\".concat(API_URL, \"/\").concat(id, \"/complete\"), {\n        method: 'PATCH'\n    });\n    if (!res.ok) throw new Error('Failed to complete step');\n    return res.json();\n};\n// ✅ Frontend-only completion stats calculator\nconst calculateCompletionStats = (steps)=>{\n    const total = steps.length;\n    const completed = steps.filter((s)=>s.completed).length;\n    const pending = total - completed;\n    const percentage = total > 0 ? Math.round(completed / total * 100) : 0;\n    return {\n        total,\n        completed,\n        pending,\n        percentage\n    };\n};\n// ✅ Optional: Fetch backend-calculated stats\nconst getUserCompletionStats = async (username)=>{\n    const res = await fetch(\"\".concat(API_URL, \"/stats/\").concat(encodeURIComponent(username)));\n    if (!res.ok) throw new Error('Failed to fetch user stats');\n    return res.json();\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFJQyxNQUFNO0lBQzdCLE9BQU9ILElBQUlJLElBQUk7QUFDakIsRUFBRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxrYWthc1xcRG9jdW1lbnRzXFxWaXN1YWwgU3R1ZGlvIENvZGVcXDNyZCB5ciBpbnRlcm5zaGlwXFxuZXctaGlyZS1vbmJvYXJkaW5nXFx1dGlsc1xcYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEJhc2UgVVJMIGZyb20gZW52IG9yIGZhbGxiYWNrIHRvIGxvY2FsaG9zdFxyXG5jb25zdCBBUElfQkFTRV9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfQkFTRV9VUkwgfHwgJ2h0dHBzOi8vbmV3LWhpcmUtb25ib2FyZGluZy5vbnJlbmRlci5jb20nO1xyXG5jb25zdCBBUElfVVJMID0gJ2h0dHBzOi8vbmV3LWhpcmUtb25ib2FyZGluZy5vbnJlbmRlci5jb20vc3RlcHMnO1xyXG5cclxuLy8g4pyFIEdldCBhbGwgc3RlcHNcclxuZXhwb3J0IGNvbnN0IGZldGNoU3RlcHMgPSBhc3luYyAoKSA9PiB7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goQVBJX1VSTCk7XHJcbiAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIHN0ZXBzJyk7XHJcbiAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbn07XHJcblxyXG4vLyDinIUgR2V0IHN0ZXBzIGZvciBhIHNwZWNpZmljIHVzZXJcclxuZXhwb3J0IGNvbnN0IGdldFN0ZXBzRm9yVXNlciA9IGFzeW5jICh1c2VybmFtZSkgPT4ge1xyXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9P2Fzc2lnbmVkVG89JHtlbmNvZGVVUklDb21wb25lbnQodXNlcm5hbWUpfWApO1xyXG4gIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBzdGVwcyBmb3IgdXNlcicpO1xyXG4gIHJldHVybiByZXMuanNvbigpO1xyXG59O1xyXG5cclxuLy8g4pyFIEFkZCBhIG5ldyBzdGVwXHJcbmV4cG9ydCBjb25zdCBhZGRTdGVwID0gYXN5bmMgKHN0ZXApID0+IHtcclxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChBUElfVVJMLCB7XHJcbiAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxyXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoc3RlcCksXHJcbiAgfSk7XHJcbiAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGFkZCBzdGVwJyk7XHJcbiAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbn07XHJcblxyXG4vLyDinIUgVXBkYXRlIGEgc3RlcFxyXG5leHBvcnQgY29uc3QgdXBkYXRlU3RlcCA9IGFzeW5jIChpZCwgdXBkYXRlcykgPT4ge1xyXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9LyR7aWR9YCwge1xyXG4gICAgbWV0aG9kOiAnUFVUJyxcclxuICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxyXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkodXBkYXRlcyksXHJcbiAgfSk7XHJcbiAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIHVwZGF0ZSBzdGVwJyk7XHJcbiAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbn07XHJcblxyXG4vLyDinIUgRGVsZXRlIGEgc3RlcFxyXG5leHBvcnQgY29uc3QgZGVsZXRlU3RlcCA9IGFzeW5jIChpZCkgPT4ge1xyXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9LyR7aWR9YCwge1xyXG4gICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICB9KTtcclxuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZGVsZXRlIHN0ZXAnKTtcclxuICByZXR1cm4gcmVzLmpzb24oKTtcclxufTtcclxuXHJcbi8vIOKchSBNYXJrIHN0ZXAgYXMgY29tcGxldGVkXHJcbmV4cG9ydCBjb25zdCBjb21wbGV0ZVN0ZXAgPSBhc3luYyAoaWQpID0+IHtcclxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtBUElfVVJMfS8ke2lkfS9jb21wbGV0ZWAsIHtcclxuICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICB9KTtcclxuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY29tcGxldGUgc3RlcCcpO1xyXG4gIHJldHVybiByZXMuanNvbigpO1xyXG59O1xyXG5cclxuLy8g4pyFIEZyb250ZW5kLW9ubHkgY29tcGxldGlvbiBzdGF0cyBjYWxjdWxhdG9yXHJcbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVDb21wbGV0aW9uU3RhdHMgPSAoc3RlcHMpID0+IHtcclxuICBjb25zdCB0b3RhbCA9IHN0ZXBzLmxlbmd0aDtcclxuICBjb25zdCBjb21wbGV0ZWQgPSBzdGVwcy5maWx0ZXIoKHMpID0+IHMuY29tcGxldGVkKS5sZW5ndGg7XHJcbiAgY29uc3QgcGVuZGluZyA9IHRvdGFsIC0gY29tcGxldGVkO1xyXG4gIGNvbnN0IHBlcmNlbnRhZ2UgPSB0b3RhbCA+IDAgPyBNYXRoLnJvdW5kKChjb21wbGV0ZWQgLyB0b3RhbCkgKiAxMDApIDogMDtcclxuICByZXR1cm4geyB0b3RhbCwgY29tcGxldGVkLCBwZW5kaW5nLCBwZXJjZW50YWdlIH07XHJcbn07XHJcblxyXG4vLyDinIUgT3B0aW9uYWw6IEZldGNoIGJhY2tlbmQtY2FsY3VsYXRlZCBzdGF0c1xyXG5leHBvcnQgY29uc3QgZ2V0VXNlckNvbXBsZXRpb25TdGF0cyA9IGFzeW5jICh1c2VybmFtZSkgPT4ge1xyXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9L3N0YXRzLyR7ZW5jb2RlVVJJQ29tcG9uZW50KHVzZXJuYW1lKX1gKTtcclxuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggdXNlciBzdGF0cycpO1xyXG4gIHJldHVybiByZXMuanNvbigpO1xyXG59O1xyXG4iXSwibmFtZXMiOlsiQVBJX0JBU0VfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSV9CQVNFX1VSTCIsIkFQSV9VUkwiLCJmZXRjaFN0ZXBzIiwicmVzIiwiZmV0Y2giLCJvayIsIkVycm9yIiwianNvbiIsImdldFN0ZXBzRm9yVXNlciIsInVzZXJuYW1lIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiYWRkU3RlcCIsInN0ZXAiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cGRhdGVTdGVwIiwiaWQiLCJ1cGRhdGVzIiwiZGVsZXRlU3RlcCIsImNvbXBsZXRlU3RlcCIsImNhbGN1bGF0ZUNvbXBsZXRpb25TdGF0cyIsInN0ZXBzIiwidG90YWwiLCJsZW5ndGgiLCJjb21wbGV0ZWQiLCJmaWx0ZXIiLCJzIiwicGVuZGluZyIsInBlcmNlbnRhZ2UiLCJNYXRoIiwicm91bmQiLCJnZXRVc2VyQ29tcGxldGlvblN0YXRzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/api.js\n"));

/***/ })

});