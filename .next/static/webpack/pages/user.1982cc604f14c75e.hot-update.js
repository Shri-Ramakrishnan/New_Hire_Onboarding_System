"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/user",{

/***/ "(pages-dir-browser)/./utils/api.js":
/*!**********************!*\
  !*** ./utils/api.js ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addStep: () => (/* binding */ addStep),\n/* harmony export */   calculateCompletionStats: () => (/* binding */ calculateCompletionStats),\n/* harmony export */   completeStep: () => (/* binding */ completeStep),\n/* harmony export */   deleteStep: () => (/* binding */ deleteStep),\n/* harmony export */   fetchSteps: () => (/* binding */ fetchSteps),\n/* harmony export */   getStepsForUser: () => (/* binding */ getStepsForUser),\n/* harmony export */   getUserCompletionStats: () => (/* binding */ getUserCompletionStats),\n/* harmony export */   updateStep: () => (/* binding */ updateStep)\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// Base URL from env or fallback to localhost\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || 'https://new-hire-onboarding-backend-1.onrender.com';\nconst API_URL = \"\".concat(API_BASE_URL, \"/steps\");\n// ✅ Get all steps\nconst fetchSteps = async ()=>{\n    const res = await fetch(API_URL);\n    if (!res.ok) throw new Error('Failed to fetch steps');\n    return res.json();\n};\n// ✅ Get steps for a specific user\nconst getStepsForUser = async (username)=>{\n    const res = await fetch(\"\".concat(API_URL, \"?assignedTo=\").concat(encodeURIComponent(username)));\n    if (!res.ok) throw new Error('Failed to fetch steps for user');\n    return res.json();\n};\n// ✅ Add a new step\nconst addStep = async (step)=>{\n    const res = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(step)\n    });\n    if (!res.ok) throw new Error('Failed to add step');\n    return res.json();\n};\n// ✅ Update a step\nconst updateStep = async (id, updates)=>{\n    const res = await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updates)\n    });\n    if (!res.ok) throw new Error('Failed to update step');\n    return res.json();\n};\n// ✅ Delete a step\nconst deleteStep = async (id)=>{\n    const res = await fetch(\"\".concat(API_URL, \"/\").concat(id), {\n        method: 'DELETE'\n    });\n    if (!res.ok) throw new Error('Failed to delete step');\n    return res.json();\n};\n// ✅ Mark step as completed\nconst completeStep = async (id)=>{\n    const res = await fetch(\"\".concat(API_URL, \"/\").concat(id, \"/complete\"), {\n        method: 'PATCH'\n    });\n    if (!res.ok) throw new Error('Failed to complete step');\n    return res.json();\n};\n// ✅ Frontend-only completion stats calculator\nconst calculateCompletionStats = (steps)=>{\n    const total = steps.length;\n    const completed = steps.filter((s)=>s.completed).length;\n    const pending = total - completed;\n    const percentage = total > 0 ? Math.round(completed / total * 100) : 0;\n    return {\n        total,\n        completed,\n        pending,\n        percentage\n    };\n};\n// ✅ Optional: Fetch backend-calculated stats\nconst getUserCompletionStats = async (username)=>{\n    const res = await fetch(\"\".concat(API_URL, \"/stats/\").concat(encodeURIComponent(username)));\n    if (!res.ok) throw new Error('Failed to fetch user stats');\n    return res.json();\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU07SUFDN0IsT0FBT0gsSUFBSUksSUFBSTtBQUNqQixFQUFFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGtha2FzXFxEb2N1bWVudHNcXFZpc3VhbCBTdHVkaW8gQ29kZVxcM3JkIHlyIGludGVybnNoaXBcXG5ldy1oaXJlLW9uYm9hcmRpbmdcXHV0aWxzXFxhcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQmFzZSBVUkwgZnJvbSBlbnYgb3IgZmFsbGJhY2sgdG8gbG9jYWxob3N0XHJcbmNvbnN0IEFQSV9CQVNFX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9CQVNFX1VSTCB8fCAnaHR0cHM6Ly9uZXctaGlyZS1vbmJvYXJkaW5nLWJhY2tlbmQtMS5vbnJlbmRlci5jb20nO1xyXG5jb25zdCBBUElfVVJMID0gYCR7QVBJX0JBU0VfVVJMfS9zdGVwc2A7XHJcblxyXG4vLyDinIUgR2V0IGFsbCBzdGVwc1xyXG5leHBvcnQgY29uc3QgZmV0Y2hTdGVwcyA9IGFzeW5jICgpID0+IHtcclxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChBUElfVVJMKTtcclxuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggc3RlcHMnKTtcclxuICByZXR1cm4gcmVzLmpzb24oKTtcclxufTtcclxuXHJcbi8vIOKchSBHZXQgc3RlcHMgZm9yIGEgc3BlY2lmaWMgdXNlclxyXG5leHBvcnQgY29uc3QgZ2V0U3RlcHNGb3JVc2VyID0gYXN5bmMgKHVzZXJuYW1lKSA9PiB7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0/YXNzaWduZWRUbz0ke2VuY29kZVVSSUNvbXBvbmVudCh1c2VybmFtZSl9YCk7XHJcbiAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGZldGNoIHN0ZXBzIGZvciB1c2VyJyk7XHJcbiAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbn07XHJcblxyXG4vLyDinIUgQWRkIGEgbmV3IHN0ZXBcclxuZXhwb3J0IGNvbnN0IGFkZFN0ZXAgPSBhc3luYyAoc3RlcCkgPT4ge1xyXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKEFQSV9VUkwsIHtcclxuICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShzdGVwKSxcclxuICB9KTtcclxuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gYWRkIHN0ZXAnKTtcclxuICByZXR1cm4gcmVzLmpzb24oKTtcclxufTtcclxuXHJcbi8vIOKchSBVcGRhdGUgYSBzdGVwXHJcbmV4cG9ydCBjb25zdCB1cGRhdGVTdGVwID0gYXN5bmMgKGlkLCB1cGRhdGVzKSA9PiB7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0vJHtpZH1gLCB7XHJcbiAgICBtZXRob2Q6ICdQVVQnLFxyXG4gICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh1cGRhdGVzKSxcclxuICB9KTtcclxuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gdXBkYXRlIHN0ZXAnKTtcclxuICByZXR1cm4gcmVzLmpzb24oKTtcclxufTtcclxuXHJcbi8vIOKchSBEZWxldGUgYSBzdGVwXHJcbmV4cG9ydCBjb25zdCBkZWxldGVTdGVwID0gYXN5bmMgKGlkKSA9PiB7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0vJHtpZH1gLCB7XHJcbiAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gIH0pO1xyXG4gIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBkZWxldGUgc3RlcCcpO1xyXG4gIHJldHVybiByZXMuanNvbigpO1xyXG59O1xyXG5cclxuLy8g4pyFIE1hcmsgc3RlcCBhcyBjb21wbGV0ZWRcclxuZXhwb3J0IGNvbnN0IGNvbXBsZXRlU3RlcCA9IGFzeW5jIChpZCkgPT4ge1xyXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9LyR7aWR9L2NvbXBsZXRlYCwge1xyXG4gICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gIH0pO1xyXG4gIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjb21wbGV0ZSBzdGVwJyk7XHJcbiAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbn07XHJcblxyXG4vLyDinIUgRnJvbnRlbmQtb25seSBjb21wbGV0aW9uIHN0YXRzIGNhbGN1bGF0b3JcclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZUNvbXBsZXRpb25TdGF0cyA9IChzdGVwcykgPT4ge1xyXG4gIGNvbnN0IHRvdGFsID0gc3RlcHMubGVuZ3RoO1xyXG4gIGNvbnN0IGNvbXBsZXRlZCA9IHN0ZXBzLmZpbHRlcigocykgPT4gcy5jb21wbGV0ZWQpLmxlbmd0aDtcclxuICBjb25zdCBwZW5kaW5nID0gdG90YWwgLSBjb21wbGV0ZWQ7XHJcbiAgY29uc3QgcGVyY2VudGFnZSA9IHRvdGFsID4gMCA/IE1hdGgucm91bmQoKGNvbXBsZXRlZCAvIHRvdGFsKSAqIDEwMCkgOiAwO1xyXG4gIHJldHVybiB7IHRvdGFsLCBjb21wbGV0ZWQsIHBlbmRpbmcsIHBlcmNlbnRhZ2UgfTtcclxufTtcclxuXHJcbi8vIOKchSBPcHRpb25hbDogRmV0Y2ggYmFja2VuZC1jYWxjdWxhdGVkIHN0YXRzXHJcbmV4cG9ydCBjb25zdCBnZXRVc2VyQ29tcGxldGlvblN0YXRzID0gYXN5bmMgKHVzZXJuYW1lKSA9PiB7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0vc3RhdHMvJHtlbmNvZGVVUklDb21wb25lbnQodXNlcm5hbWUpfWApO1xyXG4gIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCB1c2VyIHN0YXRzJyk7XHJcbiAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJBUElfQkFTRV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX0JBU0VfVVJMIiwiQVBJX1VSTCIsImZldGNoU3RlcHMiLCJyZXMiLCJmZXRjaCIsIm9rIiwiRXJyb3IiLCJqc29uIiwiZ2V0U3RlcHNGb3JVc2VyIiwidXNlcm5hbWUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJhZGRTdGVwIiwic3RlcCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInVwZGF0ZVN0ZXAiLCJpZCIsInVwZGF0ZXMiLCJkZWxldGVTdGVwIiwiY29tcGxldGVTdGVwIiwiY2FsY3VsYXRlQ29tcGxldGlvblN0YXRzIiwic3RlcHMiLCJ0b3RhbCIsImxlbmd0aCIsImNvbXBsZXRlZCIsImZpbHRlciIsInMiLCJwZW5kaW5nIiwicGVyY2VudGFnZSIsIk1hdGgiLCJyb3VuZCIsImdldFVzZXJDb21wbGV0aW9uU3RhdHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/api.js\n"));

/***/ })

});